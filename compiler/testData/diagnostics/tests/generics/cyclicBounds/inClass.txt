package

public final class A1</*0*/ T : F?, /*1*/ F : [ERROR : Cyclic upper bound: T?]> {
    public constructor A1</*0*/ T : F?, /*1*/ F : [ERROR : Cyclic upper bound: T?]>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class A2</*0*/ T : F?, /*1*/ F : E, /*2*/ E : [ERROR : Cyclic upper bound: F?]> {
    public constructor A2</*0*/ T : F?, /*1*/ F : E, /*2*/ E : [ERROR : Cyclic upper bound: F?]>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class A3</*0*/ T : F?, /*1*/ F : [ERROR : Cyclic upper bound: T?]> {
    public constructor A3</*0*/ T : F?, /*1*/ F : [ERROR : Cyclic upper bound: T?]>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class A4</*0*/ T : F?, /*1*/ F : E, /*2*/ E : [ERROR : Cyclic upper bound: F]> {
    public constructor A4</*0*/ T : F?, /*1*/ F : E, /*2*/ E : [ERROR : Cyclic upper bound: F]>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
